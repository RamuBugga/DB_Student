DROP PROCEDURE IF EXISTS [dbo].[USP_GET_StaffDetails];
GO

CREATE PROCEDURE [dbo].[USP_GET_StaffDetails]
(
    @InstitutionID INT,
    @CampusID INT = NULL,
    @UserRoleID INT = NULL,
    @StaffRoleID INT = NULL
)
AS
BEGIN
    SET NOCOUNT ON;

    -- Handle zero or empty values as NULL
    SET @CampusID = CASE WHEN ISNULL(@CampusID, 0) = 0 THEN NULL ELSE @CampusID END;
    SET @UserRoleID = CASE WHEN ISNULL(@UserRoleID, 0) = 0 THEN NULL ELSE @UserRoleID END;
    SET @StaffRoleID = CASE WHEN ISNULL(@StaffRoleID, 0) = 0 THEN NULL ELSE @StaffRoleID END;

    SELECT 
        S.StaffID,
        S.StaffCode,
        S.InstitutionID,
        ISNULL(R.RoleName, '') AS StaffRoleName,
        ISNULL(U.RoleName, '') AS UserRole,
        S.StaffGUID,
        S.StaffReferenceCode,
        S.FirstName,
        S.MiddleName,
        S.LastName,
        S.FullName,
        S.Gender,
        S.DOB,
        S.CountryCode,
        ISNULL(S.MobileNo, '') AS MobileNo,
        S.EmailID,
        S.Qualification,
        S.NoOfYearsExperience,
        SC.CampusID,
        C.CampuseName,
        S.Address
    FROM StaffDetails S WITH (NOLOCK)
    INNER JOIN UserRoles U WITH (NOLOCK) ON U.UserRoleID = S.UserRoleID
    INNER JOIN StaffRoles R WITH (NOLOCK) ON R.StaffRoleID = S.StaffRoleID
    LEFT JOIN StaffToCampuses SC WITH (NOLOCK) 
        ON SC.StaffID = S.StaffID AND SC.IsAssign = 1
    LEFT JOIN Campuses C WITH (NOLOCK) 
        ON C.CampusID = SC.CampusID
    WHERE 
        S.InstitutionID = @InstitutionID
        AND (@CampusID IS NULL OR SC.CampusID = @CampusID)
        AND (@UserRoleID IS NULL OR S.UserRoleID = @UserRoleID)
        AND (@StaffRoleID IS NULL OR S.StaffRoleID = @StaffRoleID);
END
GO
